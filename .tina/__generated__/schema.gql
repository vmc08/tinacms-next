# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  sys: SystemInfo
  id: ID!
  form: JSON!
  values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
}

type Query {
  getCollection(collection: String): Collection!
  getCollections: [Collection!]!
  node(id: String): Node!
  getDocument(collection: String, relativePath: String): DocumentNode!
  getDocumentList(before: String, after: String, first: Float, last: Float): DocumentConnection!
  getDocumentFields: JSON!
  getPagesDocument(relativePath: String): PagesDocument!
  getPagesList(before: String, after: String, first: Float, last: Float): PagesConnection!
}

type DocumentConnectionEdges {
  cursor: String
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float): DocumentConnection!
}

union DocumentNode = PagesDocument

type PagesBlocksNavigationMenuItemsSubMenuItems {
  label: String
  link: String
}

type PagesBlocksNavigationMenuItems {
  label: String
  link: String
  subMenuItems: [PagesBlocksNavigationMenuItemsSubMenuItems]
}

type PagesBlocksNavigationRightMenuItems {
  label: String
  link: String
  variant: String
}

type PagesBlocksNavigation {
  alignment: String
  menuItems: [PagesBlocksNavigationMenuItems]
  rightMenuItems: [PagesBlocksNavigationRightMenuItems]
}

type PagesBlocksHeroV1FormButton {
  label: String
  link: String
  variant: String
}

type PagesBlocksHeroV1Form {
  placeholder: String
  button: PagesBlocksHeroV1FormButton
}

type PagesBlocksHeroV1 {
  title: String
  description: String
  form: PagesBlocksHeroV1Form
  background: String
}

type PagesBlocksHeroV2Button {
  label: String
  link: String
}

type PagesBlocksHeroV2 {
  title: String
  description: String
  background: String
  button: PagesBlocksHeroV2Button
}

type PagesBlocksHeroV3ActionButtons {
  label: String
  link: String
  variant: String
}

type PagesBlocksHeroV3 {
  title: String
  description: String
  background: String
  actionButtons: [PagesBlocksHeroV3ActionButtons]
}

type PagesBlocksFeaturesV1Features {
  imageIcon: String
  title: String
  description: String
}

type PagesBlocksFeaturesV1 {
  title: String
  subtitle: String
  description: String
  features: [PagesBlocksFeaturesV1Features]
}

type PagesBlocksFeaturesV2Features {
  title: String
  description: String
}

type PagesBlocksFeaturesV2 {
  title: String
  description: String
  features: [PagesBlocksFeaturesV2Features]
}

type PagesBlocksFeaturesV3Features {
  imageIcon: String
  title: String
  description: String
}

type PagesBlocksFeaturesV3 {
  features: [PagesBlocksFeaturesV3Features]
}

type PagesBlocksProjectsProjectItem {
  link: String
  image: String
}

type PagesBlocksProjects {
  projectItem: [PagesBlocksProjectsProjectItem]
}

type PagesBlocksVision {
  title: String
  description: String
}

type PagesBlocksValuesValueItems {
  image: String
  description: String
}

type PagesBlocksValues {
  title: String
  valueItems: [PagesBlocksValuesValueItems]
}

type PagesBlocksFoooterV1Socials {
  type: String
  link: String
}

type PagesBlocksFoooterV1GroupsLinks {
  label: String
  link: String
}

type PagesBlocksFoooterV1Groups {
  groupName: String
  links: [PagesBlocksFoooterV1GroupsLinks]
}

type PagesBlocksFoooterV1 {
  logo: String
  description: String
  socials: [PagesBlocksFoooterV1Socials]
  groups: [PagesBlocksFoooterV1Groups]
  footNote: String
}

type PagesBlocksFoooterV2Socials {
  type: String
  link: String
}

type PagesBlocksFoooterV2Links {
  label: String
  link: String
}

type PagesBlocksFoooterV2 {
  socials: [PagesBlocksFoooterV2Socials]
  links: [PagesBlocksFoooterV2Links]
  footNote: String
}

union PagesBlocks = PagesBlocksNavigation | PagesBlocksHeroV1 | PagesBlocksHeroV2 | PagesBlocksHeroV3 | PagesBlocksFeaturesV1 | PagesBlocksFeaturesV2 | PagesBlocksFeaturesV3 | PagesBlocksProjects | PagesBlocksVision | PagesBlocksValues | PagesBlocksFoooterV1 | PagesBlocksFoooterV2

type Pages {
  blocks: [PagesBlocks]
}

type PagesDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Pages!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type PagesConnectionEdges {
  cursor: String
  node: PagesDocument
}

type PagesConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Float!
  edges: [PagesConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updatePagesDocument(relativePath: String!, params: PagesMutation!): PagesDocument!
  createPagesDocument(relativePath: String!, params: PagesMutation!): PagesDocument!
}

input DocumentMutation {
  pages: PagesMutation
}

input PagesBlocksNavigationMenuItemsSubMenuItemsMutation {
  label: String
  link: String
}

input PagesBlocksNavigationMenuItemsMutation {
  label: String
  link: String
  subMenuItems: [PagesBlocksNavigationMenuItemsSubMenuItemsMutation]
}

input PagesBlocksNavigationRightMenuItemsMutation {
  label: String
  link: String
  variant: String
}

input PagesBlocksNavigationMutation {
  alignment: String
  menuItems: [PagesBlocksNavigationMenuItemsMutation]
  rightMenuItems: [PagesBlocksNavigationRightMenuItemsMutation]
}

input PagesBlocksHeroV1FormButtonMutation {
  label: String
  link: String
  variant: String
}

input PagesBlocksHeroV1FormMutation {
  placeholder: String
  button: PagesBlocksHeroV1FormButtonMutation
}

input PagesBlocksHeroV1Mutation {
  title: String
  description: String
  form: PagesBlocksHeroV1FormMutation
  background: String
}

input PagesBlocksHeroV2ButtonMutation {
  label: String
  link: String
}

input PagesBlocksHeroV2Mutation {
  title: String
  description: String
  background: String
  button: PagesBlocksHeroV2ButtonMutation
}

input PagesBlocksHeroV3ActionButtonsMutation {
  label: String
  link: String
  variant: String
}

input PagesBlocksHeroV3Mutation {
  title: String
  description: String
  background: String
  actionButtons: [PagesBlocksHeroV3ActionButtonsMutation]
}

input PagesBlocksFeaturesV1FeaturesMutation {
  imageIcon: String
  title: String
  description: String
}

input PagesBlocksFeaturesV1Mutation {
  title: String
  subtitle: String
  description: String
  features: [PagesBlocksFeaturesV1FeaturesMutation]
}

input PagesBlocksFeaturesV2FeaturesMutation {
  title: String
  description: String
}

input PagesBlocksFeaturesV2Mutation {
  title: String
  description: String
  features: [PagesBlocksFeaturesV2FeaturesMutation]
}

input PagesBlocksFeaturesV3FeaturesMutation {
  imageIcon: String
  title: String
  description: String
}

input PagesBlocksFeaturesV3Mutation {
  features: [PagesBlocksFeaturesV3FeaturesMutation]
}

input PagesBlocksProjectsProjectItemMutation {
  link: String
  image: String
}

input PagesBlocksProjectsMutation {
  projectItem: [PagesBlocksProjectsProjectItemMutation]
}

input PagesBlocksVisionMutation {
  title: String
  description: String
}

input PagesBlocksValuesValueItemsMutation {
  image: String
  description: String
}

input PagesBlocksValuesMutation {
  title: String
  valueItems: [PagesBlocksValuesValueItemsMutation]
}

input PagesBlocksFoooterV1SocialsMutation {
  type: String
  link: String
}

input PagesBlocksFoooterV1GroupsLinksMutation {
  label: String
  link: String
}

input PagesBlocksFoooterV1GroupsMutation {
  groupName: String
  links: [PagesBlocksFoooterV1GroupsLinksMutation]
}

input PagesBlocksFoooterV1Mutation {
  logo: String
  description: String
  socials: [PagesBlocksFoooterV1SocialsMutation]
  groups: [PagesBlocksFoooterV1GroupsMutation]
  footNote: String
}

input PagesBlocksFoooterV2SocialsMutation {
  type: String
  link: String
}

input PagesBlocksFoooterV2LinksMutation {
  label: String
  link: String
}

input PagesBlocksFoooterV2Mutation {
  socials: [PagesBlocksFoooterV2SocialsMutation]
  links: [PagesBlocksFoooterV2LinksMutation]
  footNote: String
}

input PagesBlocksMutation {
  navigation: PagesBlocksNavigationMutation
  heroV1: PagesBlocksHeroV1Mutation
  heroV2: PagesBlocksHeroV2Mutation
  heroV3: PagesBlocksHeroV3Mutation
  featuresV1: PagesBlocksFeaturesV1Mutation
  featuresV2: PagesBlocksFeaturesV2Mutation
  featuresV3: PagesBlocksFeaturesV3Mutation
  projects: PagesBlocksProjectsMutation
  vision: PagesBlocksVisionMutation
  values: PagesBlocksValuesMutation
  foooterV1: PagesBlocksFoooterV1Mutation
  foooterV2: PagesBlocksFoooterV2Mutation
}

input PagesMutation {
  blocks: [PagesBlocksMutation]
}

schema {
  query: Query
  mutation: Mutation
}
  