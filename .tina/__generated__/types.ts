//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms'
export type Maybe<T> = T | null
export type InputMaybe<T> = Maybe<T>
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> }
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> }
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string
  String: string
  Boolean: boolean
  Int: number
  Float: number
  /** References another document, used as a foreign key */
  Reference: any
  JSON: any
}

export type SystemInfo = {
  __typename?: 'SystemInfo'
  filename: Scalars['String']
  basename: Scalars['String']
  breadcrumbs: Array<Scalars['String']>
  path: Scalars['String']
  relativePath: Scalars['String']
  extension: Scalars['String']
  template: Scalars['String']
  collection: Collection
}

export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>
}

export type PageInfo = {
  __typename?: 'PageInfo'
  hasPreviousPage: Scalars['Boolean']
  hasNextPage: Scalars['Boolean']
  startCursor: Scalars['String']
  endCursor: Scalars['String']
}

export type Node = {
  id: Scalars['ID']
}

export type Document = {
  sys?: Maybe<SystemInfo>
  id: Scalars['ID']
  form: Scalars['JSON']
  values: Scalars['JSON']
}

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float']
}

export type Query = {
  __typename?: 'Query'
  getCollection: Collection
  getCollections: Array<Collection>
  node: Node
  getDocument: DocumentNode
  getDocumentList: DocumentConnection
  getDocumentFields: Scalars['JSON']
  getPagesDocument: PagesDocument
  getPagesList: PagesConnection
}

export type QueryGetCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>
}

export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>
}

export type QueryGetDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>
  relativePath?: InputMaybe<Scalars['String']>
}

export type QueryGetDocumentListArgs = {
  before?: InputMaybe<Scalars['String']>
  after?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Float']>
  last?: InputMaybe<Scalars['Float']>
}

export type QueryGetPagesDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>
}

export type QueryGetPagesListArgs = {
  before?: InputMaybe<Scalars['String']>
  after?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Float']>
  last?: InputMaybe<Scalars['Float']>
}

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges'
  cursor?: Maybe<Scalars['String']>
  node?: Maybe<DocumentNode>
}

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection'
  pageInfo?: Maybe<PageInfo>
  totalCount: Scalars['Float']
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>
}

export type Collection = {
  __typename?: 'Collection'
  name: Scalars['String']
  slug: Scalars['String']
  label?: Maybe<Scalars['String']>
  path: Scalars['String']
  format?: Maybe<Scalars['String']>
  matches?: Maybe<Scalars['String']>
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>
  documents: DocumentConnection
}

export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>
  after?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Float']>
  last?: InputMaybe<Scalars['Float']>
}

export type DocumentNode = PagesDocument

export type PagesBlocksNavigationMenuItemsSubMenuItems = {
  __typename?: 'PagesBlocksNavigationMenuItemsSubMenuItems'
  label?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
}

export type PagesBlocksNavigationMenuItems = {
  __typename?: 'PagesBlocksNavigationMenuItems'
  label?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
  subMenuItems?: Maybe<Array<Maybe<PagesBlocksNavigationMenuItemsSubMenuItems>>>
}

export type PagesBlocksNavigation = {
  __typename?: 'PagesBlocksNavigation'
  menuItems?: Maybe<Array<Maybe<PagesBlocksNavigationMenuItems>>>
}

export type PagesBlocksHero = {
  __typename?: 'PagesBlocksHero'
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
  image?: Maybe<Scalars['String']>
}

export type PagesBlocksProjectsProjectItem = {
  __typename?: 'PagesBlocksProjectsProjectItem'
  link?: Maybe<Scalars['String']>
  image?: Maybe<Scalars['String']>
}

export type PagesBlocksProjects = {
  __typename?: 'PagesBlocksProjects'
  projectItem?: Maybe<Array<Maybe<PagesBlocksProjectsProjectItem>>>
}

export type PagesBlocksVision = {
  __typename?: 'PagesBlocksVision'
  title?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
}

export type PagesBlocksValuesValueItems = {
  __typename?: 'PagesBlocksValuesValueItems'
  image?: Maybe<Scalars['String']>
  description?: Maybe<Scalars['String']>
}

export type PagesBlocksValues = {
  __typename?: 'PagesBlocksValues'
  title?: Maybe<Scalars['String']>
  valueItems?: Maybe<Array<Maybe<PagesBlocksValuesValueItems>>>
}

export type PagesBlocksFooterMenuItems = {
  __typename?: 'PagesBlocksFooterMenuItems'
  label?: Maybe<Scalars['String']>
  link?: Maybe<Scalars['String']>
}

export type PagesBlocksFooter = {
  __typename?: 'PagesBlocksFooter'
  menuItems?: Maybe<Array<Maybe<PagesBlocksFooterMenuItems>>>
}

export type PagesBlocks =
  | PagesBlocksNavigation
  | PagesBlocksHero
  | PagesBlocksProjects
  | PagesBlocksVision
  | PagesBlocksValues
  | PagesBlocksFooter

export type Pages = {
  __typename?: 'Pages'
  blocks?: Maybe<Array<Maybe<PagesBlocks>>>
}

export type PagesDocument = Node &
  Document & {
    __typename?: 'PagesDocument'
    id: Scalars['ID']
    sys: SystemInfo
    data: Pages
    form: Scalars['JSON']
    values: Scalars['JSON']
    dataJSON: Scalars['JSON']
  }

export type PagesConnectionEdges = {
  __typename?: 'PagesConnectionEdges'
  cursor?: Maybe<Scalars['String']>
  node?: Maybe<PagesDocument>
}

export type PagesConnection = Connection & {
  __typename?: 'PagesConnection'
  pageInfo?: Maybe<PageInfo>
  totalCount: Scalars['Float']
  edges?: Maybe<Array<Maybe<PagesConnectionEdges>>>
}

export type Mutation = {
  __typename?: 'Mutation'
  addPendingDocument: DocumentNode
  updateDocument: DocumentNode
  createDocument: DocumentNode
  updatePagesDocument: PagesDocument
  createPagesDocument: PagesDocument
}

export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String']
  relativePath: Scalars['String']
  template?: InputMaybe<Scalars['String']>
}

export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>
  relativePath: Scalars['String']
  params: DocumentMutation
}

export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>
  relativePath: Scalars['String']
  params: DocumentMutation
}

export type MutationUpdatePagesDocumentArgs = {
  relativePath: Scalars['String']
  params: PagesMutation
}

export type MutationCreatePagesDocumentArgs = {
  relativePath: Scalars['String']
  params: PagesMutation
}

export type DocumentMutation = {
  pages?: InputMaybe<PagesMutation>
}

export type PagesBlocksNavigationMenuItemsSubMenuItemsMutation = {
  label?: InputMaybe<Scalars['String']>
  link?: InputMaybe<Scalars['String']>
}

export type PagesBlocksNavigationMenuItemsMutation = {
  label?: InputMaybe<Scalars['String']>
  link?: InputMaybe<Scalars['String']>
  subMenuItems?: InputMaybe<Array<InputMaybe<PagesBlocksNavigationMenuItemsSubMenuItemsMutation>>>
}

export type PagesBlocksNavigationMutation = {
  menuItems?: InputMaybe<Array<InputMaybe<PagesBlocksNavigationMenuItemsMutation>>>
}

export type PagesBlocksHeroMutation = {
  title?: InputMaybe<Scalars['String']>
  description?: InputMaybe<Scalars['String']>
  image?: InputMaybe<Scalars['String']>
}

export type PagesBlocksProjectsProjectItemMutation = {
  link?: InputMaybe<Scalars['String']>
  image?: InputMaybe<Scalars['String']>
}

export type PagesBlocksProjectsMutation = {
  projectItem?: InputMaybe<Array<InputMaybe<PagesBlocksProjectsProjectItemMutation>>>
}

export type PagesBlocksVisionMutation = {
  title?: InputMaybe<Scalars['String']>
  description?: InputMaybe<Scalars['String']>
}

export type PagesBlocksValuesValueItemsMutation = {
  image?: InputMaybe<Scalars['String']>
  description?: InputMaybe<Scalars['String']>
}

export type PagesBlocksValuesMutation = {
  title?: InputMaybe<Scalars['String']>
  valueItems?: InputMaybe<Array<InputMaybe<PagesBlocksValuesValueItemsMutation>>>
}

export type PagesBlocksFooterMenuItemsMutation = {
  label?: InputMaybe<Scalars['String']>
  link?: InputMaybe<Scalars['String']>
}

export type PagesBlocksFooterMutation = {
  menuItems?: InputMaybe<Array<InputMaybe<PagesBlocksFooterMenuItemsMutation>>>
}

export type PagesBlocksMutation = {
  navigation?: InputMaybe<PagesBlocksNavigationMutation>
  hero?: InputMaybe<PagesBlocksHeroMutation>
  projects?: InputMaybe<PagesBlocksProjectsMutation>
  vision?: InputMaybe<PagesBlocksVisionMutation>
  values?: InputMaybe<PagesBlocksValuesMutation>
  footer?: InputMaybe<PagesBlocksFooterMutation>
}

export type PagesMutation = {
  blocks?: InputMaybe<Array<InputMaybe<PagesBlocksMutation>>>
}

export type PagesPartsFragment = {
  __typename?: 'Pages'
  blocks?: Array<
    | {
        __typename: 'PagesBlocksNavigation'
        menuItems?: Array<{
          __typename: 'PagesBlocksNavigationMenuItems'
          label?: string | null
          link?: string | null
          subMenuItems?: Array<{
            __typename: 'PagesBlocksNavigationMenuItemsSubMenuItems'
            label?: string | null
            link?: string | null
          } | null> | null
        } | null> | null
      }
    | { __typename: 'PagesBlocksHero'; title?: string | null; description?: string | null; image?: string | null }
    | {
        __typename: 'PagesBlocksProjects'
        projectItem?: Array<{
          __typename: 'PagesBlocksProjectsProjectItem'
          link?: string | null
          image?: string | null
        } | null> | null
      }
    | { __typename: 'PagesBlocksVision'; title?: string | null; description?: string | null }
    | {
        __typename: 'PagesBlocksValues'
        title?: string | null
        valueItems?: Array<{
          __typename: 'PagesBlocksValuesValueItems'
          image?: string | null
          description?: string | null
        } | null> | null
      }
    | {
        __typename: 'PagesBlocksFooter'
        menuItems?: Array<{
          __typename: 'PagesBlocksFooterMenuItems'
          label?: string | null
          link?: string | null
        } | null> | null
      }
    | null
  > | null
}

export type GetPagesDocumentQueryVariables = Exact<{
  relativePath: Scalars['String']
}>

export type GetPagesDocumentQuery = {
  __typename?: 'Query'
  getPagesDocument: {
    __typename?: 'PagesDocument'
    id: string
    sys: {
      __typename?: 'SystemInfo'
      filename: string
      basename: string
      breadcrumbs: Array<string>
      path: string
      relativePath: string
      extension: string
    }
    data: {
      __typename?: 'Pages'
      blocks?: Array<
        | {
            __typename: 'PagesBlocksNavigation'
            menuItems?: Array<{
              __typename: 'PagesBlocksNavigationMenuItems'
              label?: string | null
              link?: string | null
              subMenuItems?: Array<{
                __typename: 'PagesBlocksNavigationMenuItemsSubMenuItems'
                label?: string | null
                link?: string | null
              } | null> | null
            } | null> | null
          }
        | { __typename: 'PagesBlocksHero'; title?: string | null; description?: string | null; image?: string | null }
        | {
            __typename: 'PagesBlocksProjects'
            projectItem?: Array<{
              __typename: 'PagesBlocksProjectsProjectItem'
              link?: string | null
              image?: string | null
            } | null> | null
          }
        | { __typename: 'PagesBlocksVision'; title?: string | null; description?: string | null }
        | {
            __typename: 'PagesBlocksValues'
            title?: string | null
            valueItems?: Array<{
              __typename: 'PagesBlocksValuesValueItems'
              image?: string | null
              description?: string | null
            } | null> | null
          }
        | {
            __typename: 'PagesBlocksFooter'
            menuItems?: Array<{
              __typename: 'PagesBlocksFooterMenuItems'
              label?: string | null
              link?: string | null
            } | null> | null
          }
        | null
      > | null
    }
  }
}

export type GetPagesListQueryVariables = Exact<{ [key: string]: never }>

export type GetPagesListQuery = {
  __typename?: 'Query'
  getPagesList: {
    __typename?: 'PagesConnection'
    totalCount: number
    edges?: Array<{
      __typename?: 'PagesConnectionEdges'
      node?: {
        __typename?: 'PagesDocument'
        id: string
        sys: {
          __typename?: 'SystemInfo'
          filename: string
          basename: string
          breadcrumbs: Array<string>
          path: string
          relativePath: string
          extension: string
        }
        data: {
          __typename?: 'Pages'
          blocks?: Array<
            | {
                __typename: 'PagesBlocksNavigation'
                menuItems?: Array<{
                  __typename: 'PagesBlocksNavigationMenuItems'
                  label?: string | null
                  link?: string | null
                  subMenuItems?: Array<{
                    __typename: 'PagesBlocksNavigationMenuItemsSubMenuItems'
                    label?: string | null
                    link?: string | null
                  } | null> | null
                } | null> | null
              }
            | {
                __typename: 'PagesBlocksHero'
                title?: string | null
                description?: string | null
                image?: string | null
              }
            | {
                __typename: 'PagesBlocksProjects'
                projectItem?: Array<{
                  __typename: 'PagesBlocksProjectsProjectItem'
                  link?: string | null
                  image?: string | null
                } | null> | null
              }
            | { __typename: 'PagesBlocksVision'; title?: string | null; description?: string | null }
            | {
                __typename: 'PagesBlocksValues'
                title?: string | null
                valueItems?: Array<{
                  __typename: 'PagesBlocksValuesValueItems'
                  image?: string | null
                  description?: string | null
                } | null> | null
              }
            | {
                __typename: 'PagesBlocksFooter'
                menuItems?: Array<{
                  __typename: 'PagesBlocksFooterMenuItems'
                  label?: string | null
                  link?: string | null
                } | null> | null
              }
            | null
          > | null
        }
      } | null
    } | null> | null
  }
}

export const PagesPartsFragmentDoc = gql`
  fragment PagesParts on Pages {
    blocks {
      __typename
      ... on PagesBlocksNavigation {
        menuItems {
          __typename
          label
          link
          subMenuItems {
            __typename
            label
            link
          }
        }
      }
      ... on PagesBlocksHero {
        title
        description
        image
      }
      ... on PagesBlocksProjects {
        projectItem {
          __typename
          link
          image
        }
      }
      ... on PagesBlocksVision {
        title
        description
      }
      ... on PagesBlocksValues {
        title
        valueItems {
          __typename
          image
          description
        }
      }
      ... on PagesBlocksFooter {
        menuItems {
          __typename
          label
          link
        }
      }
    }
  }
`
export const GetPagesDocumentDocument = gql`
  query getPagesDocument($relativePath: String!) {
    getPagesDocument(relativePath: $relativePath) {
      sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
      data {
        ...PagesParts
      }
    }
  }
  ${PagesPartsFragmentDoc}
`
export const GetPagesListDocument = gql`
  query getPagesList {
    getPagesList {
      totalCount
      edges {
        node {
          id
          sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          data {
            ...PagesParts
          }
        }
      }
    }
  }
  ${PagesPartsFragmentDoc}
`
export type Requester<C = {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
export function getSdk<C>(requester: Requester<C>) {
  return {
    getPagesDocument(
      variables: GetPagesDocumentQueryVariables,
      options?: C
    ): Promise<{ data: GetPagesDocumentQuery; variables: GetPagesDocumentQueryVariables; query: string }> {
      return requester<
        { data: GetPagesDocumentQuery; variables: GetPagesDocumentQueryVariables; query: string },
        GetPagesDocumentQueryVariables
      >(GetPagesDocumentDocument, variables, options)
    },
    getPagesList(
      variables?: GetPagesListQueryVariables,
      options?: C
    ): Promise<{ data: GetPagesListQuery; variables: GetPagesListQueryVariables; query: string }> {
      return requester<
        { data: GetPagesListQuery; variables: GetPagesListQueryVariables; query: string },
        GetPagesListQueryVariables
      >(GetPagesListDocument, variables, options)
    },
  }
}
export type Sdk = ReturnType<typeof getSdk>

// TinaSDK generated code
import { staticRequest } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (doc, vars, _options) => {
  let data = {}
  try {
    data = await staticRequest({
      query: doc,
      variables: vars,
    })
  } catch (e) {
    // swallow errors related to document creation
    console.warn('Warning: There was an error when fetching data')
    console.warn(e)
  }

  return { data, query: doc, variables: vars || {} }
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () => getSdk(requester)
